#
# Pack nugets for consumption
#
parameters:
  sign: ''
jobs:
- job: nuget
  displayName: Pack Nugets
  pool:
    name: Hosted Windows 2019 with VS2019
  steps:
  - task: UseDotNet@2
    displayName: 'Install .NET Core SDK'
    inputs:
      packageType: sdk
      version: 2.2.x
      includePreviewVersions: false
      installationPath: $(Agent.ToolsDirectory)/dotnet
  - script: |
    dotnet tool install --tool-path . GitVersion.Tool
    .\dotnet-gitversion /output buildserver
    displayName: Versioning
  - task: DotNetCoreCLI@2
    displayName: Build
    inputs:
      projects: 'Industrial-IoT.sln'
      arguments: '--configuration Release'
  - task: AntiMalware@3
    displayName: 'Run Virus scan'
    inputs:
      InputType: 'Basic'
      ScanType: 'CustomScan'
      FileDirPath: '$(Build.StagingDirectory)'
      EnableServices: true
      SupportLogOnError: false
      TreatSignatureUpdateFailureAs: 'Warning'
      SignatureFreshness: 'UpToDate'
      TreatStaleSignatureAs: 'Error'
  - task: SFP.build-tasks.custom-build-task-1.EsrpCodeSigning@1
    displayName: 'Code Signing'
    condition: and(succeeded(), eq(parameters['sign'], 'true'))
    inputs:
      ConnectedServiceName: 'Code Signing Certificate'
      FolderPath: '$(agent.builddirectory)'
      Pattern: '/**/Microsoft.Azure.IIoT.*.dll'
      UseMinimatch: true
      signConfigType: inlineSignParams
      inlineOperation: |
        [{
            "keyCode": "CP-230012",
            "operationSetCode": "SigntoolSign",
            "parameters": [
            {
                "parameterName": "OpusName",
                "parameterValue": "Microsoft"
            },
            {
                "parameterName": "OpusInfo",
                "parameterValue": "http://www.microsoft.com"
            },
            {
                "parameterName": "FileDigest",
                "parameterValue": "/fd \"SHA256\""
            },
            {
                "parameterName": "PageHash",
                "parameterValue": "/NPH"
            },
            {
                "parameterName": "TimeStamp",
                "parameterValue": "/tr \"http://rfc3161.gtm.corp.microsoft.com/TSS/HttpTspServer\" /td sha256"
            }
            ],
            "toolName": "sign",
            "toolVersion": "1.0"
        },
        {
            "keyCode": "CP-230012",
            "operationSetCode": "SigntoolVerify",
            "parameters": [ ],
            "toolName": "sign",
            "toolVersion": "1.0"
        }]
      MaxConcurrency: 1
      MaxRetryAttempts: 50
      VerboseLogin: true
  - task: DotNetCoreCLI@2
    displayName: Pack
    inputs:
      command: pack
      packagesToPack: 'Industrial-IoT.sln'
      configuration: Release
      nobuild: true
  - task: SFP.build-tasks.custom-build-task-1.EsrpCodeSigning@1
    displayName: 'Nuget Signing'
    condition: and(succeeded(), eq(parameters['sign'], 'true'))
    inputs:
      ConnectedServiceName: 'Code Signing Certificate'
      FolderPath: '$(Build.ArtifactStagingDirectory)'
      Pattern: 'Microsoft.Azure.IIoT.*.nupkg'
      UseMinimatch: true
      signConfigType: inlineSignParams
      inlineOperation: |
        [{
            "keyCode": "CP-401405",
            "operationSetCode": "NuGetSign",
            "parameters": [],
            "toolName": "sign",
            "toolVersion": "1.0"
        },
        {
            "keyCode": "CP-401405",
            "operationSetCode": "NuGetVerify",
            "parameters": [],
            "toolName": "sign",
            "toolVersion": "1.0"
        }]
      MaxConcurrency: 1
      MaxRetryAttempts: 50
      VerboseLogin: true
  - task: ComponentGovernanceComponentDetection@0
    displayName: 'Component Detection'
  - task: PublishBuildArtifacts@1
    condition: and(succeeded(), eq(parameters['sign'], 'true'))
    displayName: 'Publish Artifact'
    inputs:
      ArtifactName: 'release_$(GitVersion.FullSemVer)'
  - task: NuGetCommand@2
    displayName: Push
    inputs:
      command: push
      packagesToPush: '$(Build.ArtifactStagingDirectory)/**/*.nupkg;!$(Build.ArtifactStagingDirectory)/**/*.snupkg'
      nuGetFeedType: external
      publishFeedCredentials: azureiiot-dev
